<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Amaork&#39;s Blog</title>
  
  <subtitle>It never gets easier, you just get better.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://amaork.me/"/>
  <updated>2017-11-05T15:00:00.000Z</updated>
  <id>http://amaork.me/</id>
  
  <author>
    <name>amaork</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>iOS Workflow 初体验</title>
    <link href="http://amaork.me/2017/11/05/iOS-Workflow-%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
    <id>http://amaork.me/2017/11/05/iOS-Workflow-初体验/</id>
    <published>2017-11-05T08:09:02.000Z</published>
    <updated>2017-11-05T15:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Workflow-介绍"><a href="#Workflow-介绍" class="headerlink" title="Workflow 介绍"></a>Workflow 介绍</h3><p>前阵子某电商 iPhone 8 大降价，就趁机入手了一个，用了 3 年的 5S 终于退役了。之前用的是 iOS 8,升级到 iOS 11 之后感觉变化还是很大的。让我觉得比较新颖的是 <a href="https://itunes.apple.com/app/workflow-powerful-automation/id915249334" target="_blank" rel="external">Workflow</a> 这个应用（虽然这个应用早就出来了，之前从来没有用过），其主要功能是将一系列操作整合到一起，然后一键自动执行，用来提高效率，比如一键分享图片到各个社交平台。</p><p>当然，它有各种各样的用法，就看你的需求和想象力了。其内置了一系列操作称之为 「Action」。你可以根据你的需要，把各种「Action」按照需要组合起来，形成一个「Workflow」，然后一键执行。看了几个例子和帮助文档之后，我决定自己做一个试试。</p><h3 id="Air-Quality-Index-制作思路"><a href="#Air-Quality-Index-制作思路" class="headerlink" title="Air Quality Index 制作思路"></a>Air Quality Index 制作思路</h3><p>在 macOS 有个很著名的应用 「Alfred」,其内部也支持 Workflow，其中有一个查询空气质量的 Workflow, 我决定先仿照这个来一个。其大概工作流程是：</p><div id="flowchart-0" class="flow-chart"></div><p>首先需要去 <a href="http://www.pm25.in/api_doc" target="_blank" rel="external">PM25.IN</a> 了解一下查询控制质量 API 的使用，要想查询空气质量，需要一个 PM25.IN 的 AppKey。为了简便起见，就没有申请新的 AppKey，使用其公共测试 AppKey，以后正常使用的时候，最好单独申请一个属于自己的 AppKey。</p><p>得到 AppKey 之后，通过 <code>http://www.pm25.in/api/querys/pm2_5.json</code> 这个接口去获取空气质量数据，调用方法，参照其文档：</p><p><img src="http://oy6j734fq.bkt.clouddn.com/屏幕快照 2017-11-05 17.32.48.png" alt="屏幕快照 2017-11-05 17.32.48"></p><p>我们至少需要传递一个参数，即城市的名称，然后这个 API 回返回一个数组，数组中的每个项都是一个字典，代表这个城市一个检测点的数据，我们关心的数据有，监测点名称（position_name）,空气质量（quality），空气质量指数（aqi）, PM2.5 颗粒小时平均值（pm2_5）等参数。</p><p>了解了这些之后就可以动手做了，从一个程序员的角度来看 「Workflow」类似一种图形化的编程工具，其提供了 <code>Scripting</code> 类似一种图形化的编程语言。通过它你可以给变量赋值，获取变量值，流控制、循环控制、处理列表，字典等数据等。其他的功能类似于其他编程语言中的库，你可以通过这些获得设备的信息，或者对数据进行处理，进行 HTTP 请求等等，最终通过 「Alert」、「Notification」、「Vibrate」、「Play Sound」、「Speak Text」等表现方式将处理后的结果输出。</p><p><strong>需要注意的是，每个「Action」都有一个输入和输出，上一个「Action」的输出，默认会成为下一个「Action」的输入，在有些地方需要将数据保存到变量中，以免被覆盖，在后面使用的时候，再取出来。更详细的文档说明参考 <a href="https://workflow.is/docs" target="_blank" rel="external">Workflow Documentation</a>.</strong></p><h3 id="Air-Quality-Index-使用说明"><a href="#Air-Quality-Index-使用说明" class="headerlink" title="Air Quality Index 使用说明"></a>Air Quality Index 使用说明</h3><p>可以从 <a href="https://workflow.is/workflows/5b9d983524ca4c7587ad110ff9b7a5ec" target="_blank" rel="external">Air Quality Index</a>  下载我做的查询空气质量 Workflow，在使用的时候，替换你在 <a href="http://www.pm25.in/api_doc" target="_blank" rel="external">PM25.IN</a> 中申请的 AppKey, 替换位置如下截图中的<code>Text</code>中的值（默认使用的是 PM25.in 公共测试 AppKey）</p><p><img src="http://oy6j734fq.bkt.clouddn.com/aqi_appkey.jpeg" alt="aqi_appkey"></p><p>然后，根据自己的使用情况，将经常查询的城市，加入到如下截图所示的<code>List</code>中，这样就可以快速查询这个城市的空气质量情况</p><p><img src="http://oy6j734fq.bkt.clouddn.com/aqi_input.jpeg" alt="aqi_input"></p><p>最终运行效果如下：</p><p><img src="http://oy6j734fq.bkt.clouddn.com/air_quality_index_workflow.gif" alt="air_quality_index_workflow"></p><p><script src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/flowchart/1.6.5/flowchart.min.js"></script><textarea id="flowchart-0-code" style="display: none">st=>start: 开始e=>end: 结束op_input=>operation: 获取城市名称op_get_aqi=>operation: 向「PM25.in」查询空气质量数据op_data_proc=>operation: 对返回数据解析处理，进行格式化op_show_data=>operation: 展示查询城市的空气质量st->op_input->op_get_aqi->op_data_proc->op_show_data->e</textarea><textarea id="flowchart-0-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Workflow-介绍&quot;&gt;&lt;a href=&quot;#Workflow-介绍&quot; class=&quot;headerlink&quot; title=&quot;Workflow 介绍&quot;&gt;&lt;/a&gt;Workflow 介绍&lt;/h3&gt;&lt;p&gt;前阵子某电商 iPhone 8 大降价，就趁机入手了一个，用了 3 
      
    
    </summary>
    
      <category term="技术分享" scheme="http://amaork.me/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="iOS Workflow" scheme="http://amaork.me/tags/iOS-Workflow/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 绑定二级域名</title>
    <link href="http://amaork.me/2017/10/28/Hexo-%E7%BB%91%E5%AE%9A%E4%BA%8C%E7%BA%A7%E5%9F%9F%E5%90%8D/"/>
    <id>http://amaork.me/2017/10/28/Hexo-绑定二级域名/</id>
    <published>2017-10-28T13:25:09.000Z</published>
    <updated>2017-10-28T14:06:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>上周末把 <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a> 摸索了一遍，部署在了 Github Pages 上，详细过程就不多说了，网上有很多教程。今天要讲讲，如何绑定二级域名。</p><ol><li>首先你需要有一个域名，可以到<a href="https://wanwang.aliyun.com/" target="_blank" rel="external">万网</a>或国外的<a href="https://sg.godaddy.com/zh/" target="_blank" rel="external">Godaddy</a>购买</li><li>在域名供应商提供的域名解析服务中添加一条 <code>CNAME</code> 记录，指向你博客的 Github Pages 地址例如<code>blog.yourdomain.xxx -&gt; yourname.github.io</code></li><li>在博客目录的 <code>source</code> 目录中添加一个名称为 <code>CNAME</code> 的文件，文件中存放你第二部 <code>CNAME</code> 中添加的域名例如：<code>blog.yourdomain.xxx</code></li><li>打开 Github 存放你博客仓库的设置菜单，找到 Custom domain, 填入你的博客地址，保存</li><li>重新部署到 Github Pages</li></ol><p>经过以上几步，这样当你通过二级域名 <code>blog.yourdomain.xxx</code> 访问博客的时候，经过域名服务器的映射就自动跳转到了 Github Pages 地址。<strong>注意：域名记录的生效需要花费时间，通常不会超过 72 小时</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;上周末把 &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt; 摸索了一遍，部署在了 Github Pages 上，详细过程就不多说了，网上有很多教程。今天要讲讲，如何绑定二级域名。&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
      <category term="Hexo" scheme="http://amaork.me/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>我的读书笔记变迁史</title>
    <link href="http://amaork.me/2017/10/28/%E6%88%91%E7%9A%84%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E5%8F%98%E8%BF%81%E5%8F%B2/"/>
    <id>http://amaork.me/2017/10/28/我的读书笔记变迁史/</id>
    <published>2017-10-28T06:19:54.000Z</published>
    <updated>2017-10-28T09:34:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>我读书素来有整理笔记的习惯，总觉得读了一本书之后，不把书中的思想要点和自己的理解，以笔记的形式记录下来，就会很快忘掉。整理读书笔记是个很繁琐的事情，当然，整理读书笔记还是有很多好处的。比如说可以方便地进行定期回顾，加深自己的理解、日后查找资料的时候可以快速检索、可以把当时自己的想法记录下来供日后参考，另外还有增强自己成就感的好处，看着自己整理下来一篇篇的读书笔记，还是很有成就感的。</p><p>在使用 Kindle 之前，我所有的读书笔记都是在<a href="https://book.douban.com/" target="_blank" rel="external">豆瓣读书</a>中整理的，那还是 iPhone 4S 时代，豆瓣推出了一个「豆瓣笔记」的手机应用 （不是现在的「豆瓣阅读」）, 可以在那个应用中整理笔记。只需要填写章节的名称、页码，可以摘抄书中的内容，然后在后面附上自己的读书心得，也可以加照片作为附件，刚好满足了我的需求。然后就一直用了下来，我在「豆瓣笔记」中整理了 19 本书 227 条笔记。可惜好景不长，在豆瓣推出自己的电子书业务「豆瓣阅读」后，就把「豆瓣笔记」这条线给砍了，软件不再更新，后来我换手机之后，就没有继续在那「豆瓣笔记」中整理笔记了。</p><p>这中间还有一段小插曲，任何东西刚推出，需要拓展客户的时候都是很给力的，「豆瓣阅读」也不例外，我记得当时充值很优惠，好像是充 50 当 100 用，记不清楚了。「豆瓣阅读」刚推出的时候，亚马逊的 Kindle 系列电子书还没有正式进入中国，可以在淘宝上买国外的用，不过只能自己复制书进去看，不能在线购买。我尝试「豆瓣阅读」另外一个原因是，它可以把你买的电子书转换成适合 Kindle 6 寸屏的 PDF，然后通过邮件推送给你。不过这个服务也很快就停止运营了，原因是 Kindle 正式在国内上线了。对于喜欢阅读的我，当然是毫不犹豫的来了一个，这就是 Kindle Paperwhite 一代，自此上了亚马逊的船至今。</p><p>经历了「豆瓣笔记」停止更新事件之后，我又尝试了其他的一些服务，比如在 Evernote、OneNote 上整理笔记，不过都不太理想。这些平台虽然可以同步，但都不支持 Markdown 语法，而且内容放在别人平台上很不放心，谁知道将来这些平台什么时候停止运营呢，即便在停止运营前可以把你的内容导出，但自己还要二次处理，还是很麻烦的。</p><p>「豆瓣笔记」停止更新后，我就把自己的读书笔记导出来了，导出为 XML 格式。后来自己用 <a href="http://www.grinninglizard.com/tinyxml2/" target="_blank" rel="external">TinyXML2</a> 写了一个 C++ 命令行小程序 <a href="https://github.com/amaork/doubanNote2Markdown" target="_blank" rel="external">doubanNote2Markdown</a> 把「豆瓣读书」的导出的 xml 文件转换成 Markdown 格式。说实话写的很粗糙，那会儿还没有用 Python 呢，要不用 Python 干这事儿简直太轻松，说不定还能上界面呢。总之，它圆满地完成了任务，我也就没再管它了。转换后的效果如下：</p><p><img src="http://oy6j734fq.bkt.clouddn.com/屏幕快照 2017-10-28 16.59.39.png" alt="屏幕快照 2017-10-28 16.59.39"></p><p>几经折腾，我发现整理笔记最合适的方式是，将笔记整理成使用 Markdown 语法的文本文件，然后通过某种服务，同步管理这些文件。首先想到的是各种网盘，可惜最好用的 Dropbox 在国内早就不能用了。国内的几家网盘提供商，说实话我不太信任，自己的东西可能随时被删掉。所以个人觉得最稳妥的方法是使用 Git 来管理。如果读书笔记的内容不是私密的，可以在 <a href="https://github.com/" target="_blank" rel="external">Github</a> 中新建一个仓库来管理，如果是私密的，可以存放在自己私有的 Git 服务器上。我目前就是这样做的，当然不是为了存放读书笔记专门建立的 Git 服务器，而是兼用。</p><p>这样做优点就不用说了，说说缺点吧，缺点就是在移动设备上查看的时候，不是很方便。我目前的解决方案是，定期把这些读书笔记整理成 PDF 这样就可以在各种设备上查看了。现在有各种各样的 Markdown 编辑器，可以把 Markdown 转换为 PDF 或 HTML 甚至可以生成静态网站，我目前用的是 <a href="http://zh.mweb.im/" target="_blank" rel="external">MWeb</a>，感觉不错，而且支持<a href="https://www.qiniu.com/" target="_blank" rel="external">七牛</a>做图床 (MWeb 看到了，请给我打广告费(^_^))</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我读书素来有整理笔记的习惯，总觉得读了一本书之后，不把书中的思想要点和自己的理解，以笔记的形式记录下来，就会很快忘掉。整理读书笔记是个很繁琐的事情，当然，整理读书笔记还是有很多好处的。比如说可以方便地进行定期回顾，加深自己的理解、日后查找资料的时候可以快速检索、可以把当时自
      
    
    </summary>
    
      <category term="随笔" scheme="http://amaork.me/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>博客正式上线</title>
    <link href="http://amaork.me/2017/10/21/%E5%8D%9A%E5%AE%A2%E6%AD%A3%E5%BC%8F%E4%B8%8A%E7%BA%BF/"/>
    <id>http://amaork.me/2017/10/21/博客正式上线/</id>
    <published>2017-10-21T13:58:11.000Z</published>
    <updated>2017-10-24T13:50:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>早在去年就有了写博客的想法，一方面，想把自己碎碎念的想法，和日常工作中遇到的问题和解决思路整理起来，好方便日后回顾。另外一方面，想借助互联网这个开放的平台，扩大自己的影响力，同时多结识志同道合的朋友。</p><p>去年的时候研究了一阵子 <a href="https://www.djangoproject.com/" target="_blank" rel="external">Django</a> + <a href="http://getbootstrap.com/" target="_blank" rel="external">Bootstrap</a> + VPS 的方案，还做了几个 <a href="https://github.com/amaork/DjangoStudio" target="_blank" rel="external">Deom</a>。感觉用 <code>Django</code> 做个人博客有点儿大材小用，而且很多东西需要自己捣鼓，特别是 Markdown 渲染这块儿是比较头疼的，再后来因为有其他事情耽搁，就放下。</p><p>直到今年接触到了 <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a> 这个平台，发现用它做个人博客真的是太合适不过了，就像它宣称的那样小巧、快捷、支持 Markdown 而且可以部署在 <code>Github</code> 上。于是，今天下午就花了一下午的时间把这个捣鼓上了。我是大学毕业后半路出家，搞嵌入式软件开发的，对前端这块，实在是一窍不通。好在有许多人把自己 <code>Hexo</code> 使用的主题分享出来了，要特别感谢 <a href="http://chaoo.oschina.io/" target="_blank" rel="external">@郑超</a> 我现在用的这个<a href="https://github.com/chaooo/hexo-theme-BlueLake" target="_blank" rel="external">主题</a>就是他做的。</p><p>总言之，我的博客上线啦，后续我会把这几年在工作中遇到的问题，和解决的思路整理出来，希望能帮助到别人，同时也可以加深自己的记忆和理解。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;早在去年就有了写博客的想法，一方面，想把自己碎碎念的想法，和日常工作中遇到的问题和解决思路整理起来，好方便日后回顾。另外一方面，想借助互联网这个开放的平台，扩大自己的影响力，同时多结识志同道合的朋友。&lt;/p&gt;
&lt;p&gt;去年的时候研究了一阵子 &lt;a href=&quot;https://
      
    
    </summary>
    
      <category term="随笔" scheme="http://amaork.me/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>Test</title>
    <link href="http://amaork.me/2017/10/21/Test/"/>
    <id>http://amaork.me/2017/10/21/Test/</id>
    <published>2017-10-21T10:46:45.000Z</published>
    <updated>2017-11-05T07:46:01.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="This-is-a-test-page"><a href="#This-is-a-test-page" class="headerlink" title="This is a test page"></a>This is a test page</h1><h4 id="Quote"><a href="#Quote" class="headerlink" title="Quote"></a>Quote</h4><blockquote><p>Life never gets easier, yor just get better.</p></blockquote><h4 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></div><div class="line">    print(<span class="string">"Hello World"</span>)</div></pre></td></tr></table></figure><h4 id="C"><a href="#C" class="headerlink" title="C"></a>C</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span> </span>&#123;</div><div class="line"></div><div class="line"><span class="built_in">printf</span>(<span class="string">"Hello World\n"</span>);</div><div class="line"><span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="Table"><a href="#Table" class="headerlink" title="Table"></a>Table</h4><table><thead><tr><th>Header1</th><th>Header2</th></tr></thead><tbody><tr><td>cell1</td><td>cell2</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;This-is-a-test-page&quot;&gt;&lt;a href=&quot;#This-is-a-test-page&quot; class=&quot;headerlink&quot; title=&quot;This is a test page&quot;&gt;&lt;/a&gt;This is a test page&lt;/h1&gt;&lt;h4 i
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://amaork.me/2017/10/21/hello-world/"/>
    <id>http://amaork.me/2017/10/21/hello-world/</id>
    <published>2017-10-21T10:36:45.000Z</published>
    <updated>2017-10-28T06:28:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
